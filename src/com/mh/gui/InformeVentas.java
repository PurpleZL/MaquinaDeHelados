package com.mh.gui;

import com.mh.biz.Venta;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/*
 */
public class InformeVentas extends javax.swing.JDialog {
    private final GUI parent;
    
    public InformeVentas(ArrayList<Venta> listaVentas, GUI parent, boolean modal) {
        super(parent, modal);  // Hacemos la ventana modal
        this.parent = parent; 
        initComponents();
        cargarTablaVentas(listaVentas);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaInformeVentas = new javax.swing.JTable();
        botonCerrarInforme = new javax.swing.JButton();
        jScrollBar1 = new javax.swing.JScrollBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tablaInformeVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Posición", "Nombre", "Precio", "Tipo", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaInformeVentas);

        botonCerrarInforme.setText("Cerrar");
        botonCerrarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarInformeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(botonCerrarInforme)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                .addGap(54, 54, 54)
                .addComponent(botonCerrarInforme)
                .addGap(0, 92, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCerrarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarInformeActionPerformed
        this.dispose(); // Cierra solo esta ventana
    }//GEN-LAST:event_botonCerrarInformeActionPerformed


    public void cargarTablaVentas(ArrayList<Venta> lista) {
        // Orden fecha descendente (fecha mas reciente > fecha mas lejana)
        lista.sort((v1, v2) -> v2.getFechaHora().compareTo(v1.getFechaHora()));
        DefaultTableModel model = (DefaultTableModel) tablaInformeVentas.getModel(); //Cargas la tabla anterior
        model.setRowCount(0); // Borra filas anteriores

        for (Venta v : lista) {
            Object[] fila = {
                v.getFechaHora(),
                v.getPosicion(),
                v.getNombre(),
                String.format("%.2f€", v.getPrecio()).replace('.', ','),
                v.getTipo(),
                v.getCantidad()
            };
            model.addRow(fila);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCerrarInforme;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaInformeVentas;
    // End of variables declaration//GEN-END:variables
}
